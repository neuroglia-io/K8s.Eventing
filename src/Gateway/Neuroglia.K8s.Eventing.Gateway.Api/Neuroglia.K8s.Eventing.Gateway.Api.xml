<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neuroglia.K8s.Eventing.Gateway.Api</name>
    </assembly>
    <members>
        <member name="T:Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController">
            <summary>
            Represents the <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/> used to manage <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController.#ctor(Microsoft.Extensions.Logging.ILogger{Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController},MediatR.IMediator,AutoMapper.IMapper)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController"/>
            </summary>
            <param name="logger">The service used to perform logging</param>
            <param name="mediator">The service used to mediate calls</param>
            <param name="mapper">The service used to map objects</param>
        </member>
        <member name="P:Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController.Mediator">
            <summary>
            Gets the service used to mediate calls
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController.Mapper">
            <summary>
            Gets the service used to map objects
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController.Pub(CloudNative.CloudEvents.CloudEvent)">
            <summary>
            Publishes the specified cloud event
            </summary>
            <param name="cloudEvent">The cloud event to publish</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController.Sub(Neuroglia.K8s.Eventing.Gateway.Integration.Commands.CreateSubscriptionCommandDto)">
            <summary>
            Creates a new cloud event subscription
            </summary>
            <param name="command">The object that describes the command to execute</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.Eventing.Gateway.Api.Controllers.EventsController.Unsub(System.String)">
            <summary>
            Deletes an existing cloud event subscription
            </summary>
            <param name="subscriptionId">The id of the subscription to delete</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="T:Neuroglia.K8s.Eventing.Gateway.Api.Program">
            <summary>
            Represents the application's entry point container class
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.Eventing.Gateway.Api.Program.Main(System.String[])">
            <summary>
            Represents the application's entry point
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Neuroglia.K8s.Eventing.Gateway.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/>
            </summary>
            <param name="args">An array of string representing the arguments passed to the application</param>
            <returns>A new <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/></returns>
        </member>
        <member name="T:Neuroglia.K8s.Eventing.Gateway.Api.Startup">
            <summary>
            Represents the class used to configure the application
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.Eventing.Gateway.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.Eventing.Gateway.Api.Startup"/>
            </summary>
            <param name="configuration">The current <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="P:Neuroglia.K8s.Eventing.Gateway.Api.Startup.Configuration">
            <summary>
            Gets the current <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.Eventing.Gateway.Api.Startup.ApplicationOptions">
            <summary>
            Gets the current <see cref="T:Neuroglia.K8s.Eventing.Gateway.Infrastructure.Configuration.ApplicationOptions"/>
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.Eventing.Gateway.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the application's services
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
        </member>
        <member name="M:Neuroglia.K8s.Eventing.Gateway.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configures the application's request pipeline
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to configure</param>
            <param name="env">The current <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment"/></param>
        </member>
    </members>
</doc>
